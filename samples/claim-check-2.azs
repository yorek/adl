#
# Add also a Azure Storage Queue to allow custom app to process EventGrid messages
#

$RG="pnp";
$PREFIX="${RG}cc";
$LOCATION="eastus";

location use '${LOCATION}';

group create '${RG}';

# TODO: add option to remove extension at the end of the script if not already there?
# TODO: add option to update an extension if already existing?
extension add 'eventgrid';

storage account create '${PREFIX}storage'
(
    sku: 'Standard_LRS',
	kind: 'StorageV2'
);

$SID = storage account show (
    query: "id"
);

storage queue create '${PREFIX}queue';

appinsights create '${PREFIX}functionappinsights' (
	application-id: "function"
);

$APPINSIGHTS_KEY = appinsights key list (
	query: "properties.InstrumentationKey"
);

# Do not create or use a service plan if you want to use a consumption plan
appservice plan create '${PREFIX}plan' (
	number-of-workers: 1,
	sku: "S1"
);

functionapp create '${PREFIX}functionapp';

functionapp deployment source config-zip (
	src: "sample-1-bin.zip"
);

functionapp config appsettings set (
	settings: "APPINSIGHTS_INSTRUMENTATIONKEY=$APPINSIGHTS_KEY"
);

eventgrid topic create '${PREFIX}eventgrid';

eventgrid event-subscription create 'function' (
    source-resource-id: '${SID}',
	endpoint: 'https://${PREFIX}functionapp.azurewebsites.net/api/ClaimCheck',
    endpoint-type: 'webhook',
	included-event-types: "Microsoft.Storage.BlobCreated" 
);

eventgrid event-subscription create 'queue' (  
	source-resource-id: '${SID}',
  	endpoint-type: "storagequeue",
	endpoint: "${SID}/queueservices/default/queues/${PREFIX}queue",
	included-event-types: "Microsoft.Storage.BlobCreated" 
);
