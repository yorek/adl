#
# Claim-Check Pattern Sample 2
#

$RG="pnp";
$PREFIX="${RG}cc2";
$LOCATION="eastus";

location use '${LOCATION}';

group create '${RG}';

storage account create '${PREFIX}storage'
(
    sku: 'Standard_LRS',
	kind: 'StorageV2'
);

$SID = storage account show (
    query: "id"
);

storage account create '${PREFIX}capture'
(
    sku: 'Standard_LRS',
	kind: 'StorageV2'
);

$CID = storage account show (
    query: "id"
);

storage container create 'eventhubs';

storage account use '${PREFIX}storage';

appinsights create '${PREFIX}functionappinsights' (
	application-id: "function"
);

$APPINSIGHTS_KEY = appinsights key list (
	query: "properties.InstrumentationKey"
);

# Do not create or use a service plan if you want to use a consumption plan
appservice plan create '${PREFIX}plan' (
	number-of-workers: 1,
	sku: "S1"
);

functionapp create '${PREFIX}functionapp';

functionapp deployment source config-zip (
	src: "./bin/sample-2-bin.zip"
);

functionapp config appsettings set (
	settings: "APPINSIGHTS_INSTRUMENTATIONKEY=$APPINSIGHTS_KEY"
);

eventhubs namespace create '${PREFIX}eventhubs' (
	sku: "Standard",
	capacity: 1
);

eventhubs eventhub create '${PREFIX}eventhub' (
	partition-count: 1,
	enable-capture: "true",
	capture-interval: 60,
	destination-name: "EventHubArchive.AzureBlockBlob",	
	archive-name-format: "{Namespace}/{EventHub}/P{PartitionId}Y{Year}M{Month}D{Day}h{Hour}m{Minute}s{Second}",
	blob-container: 'eventhubs',
	storage-account: "${CID}"
);

eventhubs eventhub authorization-rule create 'Listen' (
	rights: 'Listen'
);

$EEID = eventhubs eventhub show (
    query: "id"
);

eventgrid topic create '${PREFIX}eventgrid';

eventgrid event-subscription create 'function' (
    source-resource-id: '${SID}',
	included-event-types: "Microsoft.Storage.BlobCreated",
    endpoint-type: 'webhook',
	endpoint: 'https://${PREFIX}functionapp.azurewebsites.net/api/ClaimCheck'
);

eventgrid event-subscription create 'eventhub' (  
	source-resource-id: '${SID}',
	included-event-types: "Microsoft.Storage.BlobCreated",
  	endpoint-type: "eventhub",
	endpoint: "${EEID}"
);
