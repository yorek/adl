$PREFIX="dmnova2";
$LOCATION="eastus2";

location use '$(LOCATION)';

group create 'NOVA2';

#
# Storage
# 
storage account create '($PREFIX)storage' (
    sku: 'Standard_LRS'
);

#
# HDInsight Spark
#
hdinsight create '($PREFIX)hdi' (
    size: 3,
    type: 'spark',
    http-user: 'damauri',
    http-password: 'Passw0rd2018!',
    ssh-user: 'damauri',
    ssh-password: 'Passw0rd2018!',
    version: '3.6',
    storage-default-container: "($PREFIX)hdi"
);

#
# Event Hubs
#
eventhubs namespace create '($PREFIX)ehs' (
	sku: "Standard",
	capacity: 2	
);

eventhubs eventhub create '($PREFIX)eh1' (
	message-retention: 1,
	partition-count: 2
);

eventhubs eventhub consumer-group create 'nova';

#
# Cosmos DB
#
cosmosdb create '($PREFIX)cosmosdb';

cosmosdb database create 'nova';

cosmosdb collection create 'nova' (
	partition-key-path: "/Id",
	throughput: 20000,
	indexing-policy: @indexing.json
);

#
# Key Vault
#
keyvault create '($PREFIX)keyvault';

#
# Service Fabric
#

sf cluster create '($PREFIX)fabric' (
    secret-identifier: "https://{KeyVault}.vault.azure.net:443/secrets/{MyCertificate}"
);


# App Service
#
appservice plan create '($PREFIX)plan' (
	number-of-workers: 4,
	sku: "P1"
);

#
# Application Insights
#

appinsights create '($PREFIX)appinsights' (
	application-id: "Nova"
);
